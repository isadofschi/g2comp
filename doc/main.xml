<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE Book SYSTEM "gapdoc.dtd">

<Book Name="G2Comp">

<TitlePage>
  <Title>The <Package>G2Comp</Package> Package</Title>
  <Version>Version 1.0.1</Version>
  <Author>Iván Sadofschi Costa
    <Email>isadofschi@dm.uba.ar</Email>
  </Author>

  <Copyright>&copyright; 2018 Iván Sadofschi Costa.
  </Copyright>
</TitlePage>

<TableOfContents/>

<Body>
<Chapter>
<Heading>G 2-complexes</Heading>

<!-- ########################################################################################################### -->

<Section Label="sec:theory">
<Heading>Representation in &GAP;</Heading>
A G-2-complex is represented as a tuple [ G, V, E, F, labels ]
# each element r in F is a list of pairs [edge, sign]
# that represents a closed edge path used to attach a 2-cell
</Section>

<!-- ########################################################################################################### -->

<Section>
<Heading>Functions to construct G - 2-complexes</Heading>


In this section we describe the main functions of this package.

<ManSection>
<Func Name="NewEquivariantTwoComplex" Arg="G"/>
<Description>
Returns an empty <A>G</A> <M>2</M>-complex.
<Example>
gap> K:=NewEquivariantTwoComplex(AlternatingGroup(5));
[ Alt( [ 1 .. 5 ] ), [  ], [  ], [  ], [  ] ]
</Example>
</Description>
</ManSection>

<ManSection>
<Func Name="AddOrbitOfVertices" Arg="K,H,label"/>
<Description>
Adds an orbit of vertices to <A>K</A> of type <A>G/H</A>.
Returns the new vertex corresponding to the coset <A>1.H</A>.
A label <A>label</A> for the new orbit must be provided.
<Example>
gap> AddOrbitOfVertices(K, Group((1,2)(3,4)), "A");
[ (), Group([ (1,2)(3,4) ]), "A" ]
</Example>
</Description>
</ManSection>

<ManSection>
<Func Name="AddOrbitOfEdges" Arg="K, H, v1, v2, label"/>
<Description>
Adds an orbit of edges to <A>K</A> of type <A>G/H</A>. The vertices <A>v1,v2</A> are the endpoints of the attached edge.
Returns the new edge corresponding to the coset <A>1.H</A>.
A label <A>label</A> for the new orbit must be provided.
<Example>

</Example>
</Description>
</ManSection>

<ManSection>
<Func Name="AddOrbitOfTwoCells" Arg="K, H, f, label"/>
<Description>
Adds an orbit of <M>2</M>-cells to <A>K</A> with stabilizer <A>H</A> and attaching map <A>f</A>.
Returns the new 2-cell corresponding to the coset <A>1.H</A>.
A label <A>label</A> for the new orbit must be provided.
<Example>

</Example>
</Description>
</ManSection>
</Section>

<!-- ########################################################################################################### -->

<Section>
<Heading>Components of a G 2-complex</Heading>

<ManSection>
<Func Name="GroupOfComplex" Arg="K"/>
<Description>
Returns the group acting on <A>K</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="VerticesOfComplex" Arg="K"/>
<Description>
Returns the set of vertices of <A>K</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="EdgesOfComplex" Arg="K"/>
<Description>
Returns the set of edges of <A>K</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="FacesOfComplex" Arg="K"/>
<Description>
Returns the set of faces of <A>K</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="LabelsOfComplex" Arg="K"/>
<Description>
Returns the set of labels of <A>K</A>.
</Description>
</ManSection>


</Section>

<!-- ########################################################################################################### -->

<Section>
<Heading>Action on the cells</Heading>

<ManSection>
<Func Name="ActionVertex" Arg="g,v"/>
<Description>
Returns the vertex <A>g.v</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="ActionEdge" Arg="g,e"/>
<Description>
Returns the edge <A>g.e</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="ActionOrientedEdge" Arg="g,e"/>
<Description>
Returns the oriented edge <A>g.e</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="ActionEdgePath" Arg="g,c"/>
<Description>
Returns the edge path <A>g.c</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="ActionTwoCell" Arg="g,f"/>
<Description>
Returns the 2-cell <A>g.f</A>.
</Description>
</ManSection>

</Section>

<!-- ########################################################################################################### -->

<Section>
<Heading>Stabilizers</Heading>

<ManSection>
<Func Name="StabilizerVertex" Arg="v"/>
<Description>
Returns the stabilizer of <A>v</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="StabilizerEdge" Arg="e"/>
<Description>
Returns the stabilizer of <A>e</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="StabilizerOrientedEdge" Arg="e"/>
<Description>
Returns the stabilizer of <A>e</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="StabilizerEdgePath" Arg="g,f"/>
<Description>
Returns the 2-cell <A>g.f</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="StabilizerTwoCell" Arg="f"/>
<Description>
Returns the stabilizer of <A>f</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="StabilizerCell" Arg="e"/>
<Description>
Returns the stabilizer of a <M>k</M>-cell <A>e</A>.
</Description>
</ManSection>

</Section>

<!-- ########################################################################################################### -->

<Section>
<Heading>Edges and edge paths</Heading>

<ManSection>
<Func Name="VerticesOfEdge" Arg="e"/>
<Description>
Returns the set of vertices of the edge <A>e</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="SourceOrientedEdge" Arg="e"/>
<Description>
Returns the source of the oriented edge <A>e</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="TargetOrientedEdge" Arg="e"/>
<Description>
Returns the target of the oriented edge <A>e</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="VerticesOrientedEdge" Arg="e"/>
<Description>
Returns a list with the source and target of the oriented edge <A>e</A> (in this order).
</Description>
</ManSection>

<ManSection>
<Func Name="OppositeEdge" Arg="e"/>
<Description>
Returns the opposite edge of an oriented edge <A>e</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="IsEdgePath" Arg="c"/>
<Description>
Checks if a list of edges <A>c</A> is an edge path.
</Description>
</ManSection>

<ManSection>
<Func Name="IsClosedEdgePath" Arg="c"/>
<Description>
Checks if a list of edges <A>c</A> is a closed edge path.
</Description>
</ManSection>

<ManSection>
<Func Name="InverseEdgePath" Arg="c"/>
<Description>
Returns the inverse edge path of an edge path <A>c</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="ReducedEdgePath" Arg="c"/>
<Description>
Reduces the edge path <A>c</A> (destructive).
</Description>
</ManSection>

<ManSection>
<Func Name="CyclicallyReducedEdgePath" Arg="c"/>
<Description>
Cyclically reduces the edge path <A>c</A> (destructive).
</Description>
</ManSection>

</Section>

<!-- ########################################################################################################### -->

<Section>
<Heading>Complex mod G</Heading>
These functions allow to work with the complex <M>K/G</M>.

<ManSection>
<Func Name="TwoComplexModG" Arg="K"/>
<Description>
Returns the complex <A>K/G</A>. This is represented as a 2-complex with an action of the trivial group.
<Example>
gap> KmodG:=TwoComplexModG(K);
</Example>
</Description>
</ManSection>

<ManSection>
<Func Name="VertexModG" Arg="v"/>
<Description>
</Description>
</ManSection>

<ManSection>
<Func Name="EdgeModG" Arg="e"/>
<Description>
</Description>
</ManSection>

<ManSection>
<Func Name="DirectedEdgeModG" Arg="e"/>
<Description>
</Description>
</ManSection>

<ManSection>
<Func Name="EdgePathModG" Arg="c"/>
<Description>
</Description>
</ManSection>

</Section>

<!-- ########################################################################################################### -->

<Section>
<Heading>Fundamental group</Heading>

<ManSection>
<Func Name="Pi1" Arg="K"/>
<Description>
Returns the fundamental group of a connected complex <A>K</A>. Returns <A>fail</A> if <A>K</A> is not connected.
</Description>
</ManSection>

<ManSection>
<Func Name="ElementOfPi1FromClosedEdgePath" Arg="K,c"/>
<Description>
Returns the element of the fundamental group of <A>K</A> representing the class of the closed edge path <A>c</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="Pi1RandomSpanningTree" Arg="K"/>
<Description>
Returns the fundamental group of a connected complex <A>K</A>, computed using a random spanning tree of <A>K</A>. Returns <A>fail</A> if <A>K</A> is not connected.
</Description>
</ManSection>

<ManSection>
<Func Name="Pi1XModX0" Arg="K"/>
<Description>
Returns the fundamental group of <A>K/K^0</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="SpanningTreeOfComplex" Arg="K"/>
<Description>
Returns a spanning tree for the 1-skeleton of <A>K</A>.
</Description>
</ManSection>

<ManSection>
<Func Name="RandomSpanningTreeOfComplex" Arg="K"/>
<Description>
Returns a spanning tree for the 1-skeleton of <A>K</A> chosen randomly.
</Description>
</ManSection>

</Section>

<!-- ########################################################################################################### -->

<Section>
<Heading>Homotopy properties</Heading>

<ManSection>
<Func Name="IsAcyclic" Arg="K"/>
<Description>
Returns <K>true</K> if <A>K</A> is acyclic, <K>false</K> otherwise.
</Description>
</ManSection>

<ManSection>
<Func Name="IsAsphericalComplex" Arg="K"/>
<Description>
Uses the function <C>IsAspherical</C> from the package <Package>HAP</Package>. Returns <K>true</K> if <A>K</A> is aspherical. It may return <K>fail</K>.
</Description>
</ManSection>

<ManSection>
<Func Name="IsContractible" Arg="K[,time_limit]"/>
<Description>
Returns <K>true</K> if <A>K</A> is contractible. It may return <K>fail</K>. The optional argument <A>time_limit</A> allows to set a time limit for the computation of the fundamental group.
</Description>
</ManSection>

</Section>

<!-- ########################################################################################################### -->

<Section>
<Heading>Random attaching maps</Heading>


<ManSection>
<Func Name="RandomAttachingMaps" Arg="K,lengths"/>
<Description>
Returns a list of randomly chosen closed edge paths in <A>K</A> of the specified lengths <A>lenghts</A>. 
</Description>
</ManSection>

</Section>

<!-- ########################################################################################################### -->

<Section>
<Heading>More</Heading>

<ManSection>
<Func Name="H2AsGModule" Arg="K"/>
<Description>

Returns the representation of the group <A>G</A> given by the action on <A>H_2(K)</A>. It is represented as a morphism <A>G -> GL(m,Z)</A> where <A>m</A> is the rank of <A>H_2(K)</A>.

</Description>
</ManSection>

<ManSection>
<Func Name="CoveringSpaceFromHomomorphism" Arg="H,G,phi"/>
<Description>
If <A>H</A> is finitely presented, <A>G</A> is finite and <A>phi</A> is an epimorphism <A>f: H -> G</A>, returns the covering space of the presentation complex of <A>H</A> corresponding to the subgroup <C>Kernel(phi)</C> of <A>H</A>. This covering space is represented as a <A>G</A> 2-complex.
</Description>
</ManSection>


</Section>

<!-- ########################################################################################################### -->

<Section>
<Heading>Additional functions</Heading>

<ManSection>
<Func Name="CanonicalLeftCosetElement" Arg="g,H"/>
<Description>
Returns a "canonical" representative of the left coset <A>gH</A> which is independent of the given representative <A>g</A>. This can be used to compare cosets by comparing their canonical representatives.
The representative chosen to be the "canonical" one is representation dependent and only guaranteed to remain the same within one &GAP; session.
<Example>
gap> CanonicalLeftCosetElement((2,3,5),H);
(3,5)
</Example>
</Description>
</ManSection>

<ManSection>
<Func Name="Epimorphism" Arg="P,G"/>
<Description>
Returns <K>true</K> if there is an epimorphism from the group given by the presentation <A>P</A> to the finite group <A>G</A>. Otherwise returns <K>false</K>.
</Description>
</ManSection>

<ManSection>
<Func Name="PresentationLength" Arg="P"/>
<Description>
Returns the length of the presentation <A>P</A>.
</Description>
</ManSection>

</Section>

<!-- ########################################################################################################### -->

</Chapter>
</Body>
<Bibliography Databases="g2comp" />
<TheIndex/>

</Book>
