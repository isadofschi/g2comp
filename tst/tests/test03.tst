gap> G:=AlternatingGroup(5);;
gap> H1:=Group([ (3,4,5), (2,4)(3,5) ]);;
gap> H2:=Group([ (1,2)(4,5), (3,4,5) ]);;
gap> H3:=Group([ (1,4)(2,3), (1,3)(4,5) ]);;
gap> K:=NewEquivariantTwoComplex(G);
<G-equivariant 2-complex>
gap> v1:=AddOrbitOfVertices(K,H1,"v1");
v1
gap> v2:=AddOrbitOfVertices(K,H2,"v2");
v2
gap> v3:=AddOrbitOfVertices(K,H3,"v3");
v3
gap> e1:=AddOrbitOfEdges(K, Intersection(H1,H2), v1, v2, "e1");
e1
gap> e2:=AddOrbitOfEdges(K, Intersection(H1,H3), v1, v3, "e2");
e2
gap> e3:=AddOrbitOfEdges(K, Intersection(H2,H3), v2, v3, "e3");
e3
gap> e4:=AddOrbitOfEdges(K, Group(()), v1, v1, "e4");
e4
gap> Reset(GlobalMersenneTwister,1234);;
gap> ls:=[1,3,5,4,6,11,33,111];;
gap> cs:=RandomAttachingMaps(K,ls);
[ (2,3,4)*e3^-1+(1,2,3,5,4)*e1^-1+(1,3,2,5,4)*e1+(1,4,2,5,3)*e3+(1,5,4,3,2)*e3^-1+(1,4,5,3,2)*e3, (1,2)(4,5)*e4^-1, 
  (1,3,4,2,5)*e1^-1+(1,4,5)*e4+(1,3,4,2,5)*e1+(1,5,2,3,4)*e3+(1,4,3,5,2)*e3^-1
+(1,3,4,5,2)*e1^-1+(1,4,2)*e4+(1,4,5,3,2)*e2+(1,3)(2,5)*e3^-1+(1,5,2,4,3)*e3+(1,4)(2,5)*e3^-1, 
  (2,3,4)*e4+(2,5,3)*e4^-1+(2,4)(3,5)*e4^-1+e2+e3^-1+(1,2)(4,5)*e1^-1+(1,4,5,3,2)*e2+(2,4,5)*e3^-1+(2,3,5)*e1^-1+(2,4,3)*e4^-1+e4+(2,3,4)*e4^-1+(2,4,3)*e4^-1+(2,4,3)*e2+(1,5,4,2,3)*e3^-1+(1,4,2,5,3)*e3+(1,3,5,2,4)*e3^-1+(1,3,4,2,5)*e1
^-1+(1,3,5)*e4^-1+(1,5)(2,3)*e4+(1,2,3,4,5)*e2+(2,5)(3,4)*e3^-1+(1,2,3,4,5)*e1
^-1+(1,3,4,2,5)*e1+(1,4)(2,5)*e3+(3,5,4)*e2^-1+(2,5)(3,4)*e4+(3,4,5)*e4+(2,5,3
)*e4^-1+(3,4,5)*e4+(2,5,3)*e4^-1+(2,5,4)*e4^-1+(2,5,4)*e4^-1, 
  (1,3,4,5,2)*e4+(1,2)(3,4)*e4^-1+(1,3,4,5,2)*e4+(1,2)(4,5)*e4, 
  (1,3)(2,4)*e4+(1,3)(2,4)*e4+(1,4,2,5,3)*e4^-1, 
  (1,4,5)*e4+(1,5)(2,3)*e4+(1,4,2,3,5)*e4+(1,4,5)*e4^-1+(1,5)(3,4)*e4^-1, 
  (1,5,4,2,3)*e3+(1,4,2)*e2^-1+(1,2)(4,5)*e4^-1+(1,5,2)*e4^-1+(1,3,2)*e4+(1,3,2)*e2+(2,3)(4,5)*e3^-1+(2,4,3)*e3+(1,4)(3,5)*e2^-1+(1,2,3,5,4)*e4^-1+(1,5,2,3,4)*e4^-1+(1,2,4)*e2+(2,3)(4,5)*e3^-1+(2,3)(4,5)*e1^-1+(3,4,5)*e2+(1,2)(3,4)*e2^-1+(1,2)(4,5)*e4^-1+(1,3,2)*e2+(1,3,2)*e3^-1+(1,5,4,3,2)*e3+(1,4)(2,3)*e2^-1+(1,2,3,5,4)*e2+(1,2)(3,4)*e2^-1+(1,4,3,5,2)*e4^-1+(1,3,4,5,2)*e1+(1,3,4,5,2)*e3+(2,3,5)*e3^-1+(1,2,3,4,5)*e1^-1+(1,3,4,2,5)*e1+(1,4)(2,5)*e3+(3,5,4)*e2^-1+(2,3,5)*e4^-1+(2,4,3)*e2+(1,5,4,2,3)*e3^-1+(1,3)(2,4)*e3+(2,5,4)*e3^-1+(2,3,4)*e3+(2,3,4)*e2^-1+(2,3,4)*e1+(2,4)(3,5)*e3+(1,2,4)*e2^-1+(1,3,5,2,4)*e1+(1,4)(2,5)*e3+(1,5,2,4,3)*e3^-1+(1,3,2,4,5)*e1^-1+(1,4,3,2,5)*e4+(1,3,2,4,5)*e1+(1,3)(2,5)*e1^-1+(1,4,5,2,3)*e4^-1+(1,4,3)*e2+(2,3,4)*e3^-1+(2,4)(3,5)*e3+(2,3)(4,5)*e3^-1+(2,3)(4,5)*e1^-1+(2,4,3)*e4+(2,5,3)*e4^-1+(3,5,4)*e4+(2,5)(3,4)*e4^-1+(2,3,5)*e4+(2,3)(4,5)*e2+(1,4,5)*e2^-1+(1,2,4,3,5)*e4+(1,3,4,2,5)*e4+(1,4,2,3,5)*e4+(1,3,5)*e1+(1,4,3,5,2)*e3+(1,4,5)*e2^-1+(1,2,5)*e4+(1,5)(2,3)*e4+(1,4,5)*e4^-1+(1,3,5)*e2+(1,3)(2,4)*e2^-1+(1,4,2,5,3)*e4^-1+(1,3)(2,4)*e4+(1,2,3)*e1+(2,4,3)*e3+(1,5,4,2,3)*e3^-1+(1,4,2,5,3)*e3+(2,5)(3,4)*e3^-1+(1,2,3,4,5)*e1^-1+(1,5)(3,4)*e4+(1,2,5)*e4+(1,4,3,2,5)*e4^-1+(1,4,3,2,5)*e4^-1+(1,2,5)*e2+(2,4,3)*e3^-1+(2,3)(4,5)*e1^-1+(2,5,4)*e4+(3,4,5)*e4+(2,4,5)*e4^-1+e1+(3,5,4)*e3+(1,2)(4,5)*e2^-1+(1,3,4,5,2)*e4+(1,2)(4,5)*e1+e3+(2,5)(3,4)*e3^-1+(1,2,3,4,5)*e1^-1+(1,3,4,2,5)*e4^-1+(1,2,3,4,5)*e2+(1,4,2,5,3)*e3^-1+(1,3)(2,4)*e3+(1,2)(3,4)*e2^-1+(1,4,3,5,2)*e4+(1,2)(4,5)*e2+(1,3,2,4,5)*e2^-1+(1,3,4,2,5)*e1+(1,3,5,2,4)*e3+(1,5,4,3,2)*e3^-1+(1,3)(4,5)*e1^-1+(1,3)(2,4)*e1 ]
gap> ForAll(cs, IsClosedEdgePath);
true
gap> Set(List(cs,Length))=Set(ls);
true

